buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

ext.configFile = file('build.properties')
ext.config = parseConfig(configFile)

group = "azmalent.${config.modid}"
archivesBaseName = config.modid
version = "${config.minecraft_version}-${config.mod_version}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: config.mappings_channel, version: config.mappings_version

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                chestbubbles {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                chestbubbles {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'chestbubbles', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                chestbubbles {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "chestbubbles.refmap.json"
    config "chestbubbles.mixins.json"
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${config.minecraft_version}-${config.forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation fg.deobf("curse.maven:iron-chests-228756:${config.ironchests_file_id}")
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'

        expand 'mod_name': config.mod_name, 'mod_version': project.version,
                'minecraft_version': config.minecraft_version, 'minecraft_version_range': config.minecraft_version_range,
                'fml_min': config.fml_min, 'forge_version': config.forge_version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title": "${config.modid}",
                "Specification-Vendor": "azmalent",
                "Specification-Version": "1",
                "Implementation-Title": "${config.modid}",
                "Implementation-Version": "${config.mod_version}",
                "Implementation-Vendor": "azmalent",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),

                'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                "MixinConfigs": "${config.modid}.mixins.json",
                'FMLCorePluginContainsFMLMod': 'true',
                'ForceLoadAsMod': 'true'
        ])
    }
}

static def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

jar.finalizedBy('reobfJar')
